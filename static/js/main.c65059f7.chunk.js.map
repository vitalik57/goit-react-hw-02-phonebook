{"version":3,"sources":["components/ContactList/Contact.module.css","components/ContactForm/ContactForm.js","components/ContactList/ContactListItem.js","components/ContactList/ContactList.js","components/Filter/Filter.js","components/Section/Section.js","components/App.js","redux/clientsActions.js","redux/clientsReducer.js","redux/filterReduser.js","redux/store.js","index.js"],"names":["module","exports","ContactForm","state","name","number","handleChange","e","target","value","setState","handleSubmit","preventDefault","contact","id","uuidv4","props","addContact","reset","this","onSubmit","type","pattern","placeholder","onChange","disabled","length","Component","ContactListItem","onRemove","className","styles","button","onClick","ContactList","contacts","list","map","Filter","Section","title","children","App","filter","removeContact","newName","toLowerCase","includes","alert","getVisibleContacts","connect","payload","getAllContacts","ClientsReducer","action","filterReducer","rootReducer","combineReducers","items","store","createStore","composeWithDevTools","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c65059f7.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Contact_button__3HBox\",\"list\":\"Contact_list__3GYbV\"};","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\n\r\nclass ContactForm extends Component {\r\n  state = {\r\n    name: \"\",\r\n    number: \"\",\r\n  };\r\n\r\n  handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    this.setState({\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    const { name, number } = this.state;\r\n    const contact = {\r\n      id: uuidv4(),\r\n      name: name,\r\n      number: number,\r\n    };\r\n    this.props.addContact(contact);\r\n    this.reset();\r\n  };\r\n  reset = () => {\r\n    this.setState({\r\n      name: \"\",\r\n      number: \"\",\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { name, number } = this.state;\r\n    return (\r\n      <form onSubmit={this.handleSubmit}>\r\n        <label>\r\n          Name:\r\n          <input\r\n            type=\"text\"\r\n            value={name}\r\n            name=\"name\"\r\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n            placeholder=\"Name...\"\r\n            onChange={this.handleChange}\r\n          />\r\n        </label>\r\n        <br />\r\n        <label>\r\n          Number:\r\n          <input\r\n            type=\"tell\"\r\n            value={number}\r\n            name=\"number\"\r\n            placeholder=\"Number...\"\r\n            onChange={this.handleChange}\r\n          ></input>\r\n        </label>\r\n        <br />\r\n        <button type=\"submit\" disabled={!name.length || !number.length}>\r\n          Add contact\r\n        </button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ContactForm;\r\nContactForm.propTypes = {\r\n  addContact: PropTypes.func.isRequired,\r\n};\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styles from \"../ContactList/Contact.module.css\";\r\n\r\nconst ContactListItem = ({ name, number, onRemove }) => {\r\n  return (\r\n    <>\r\n      <li>\r\n        {name} : {number}\r\n      </li>\r\n\r\n      <button className={styles.button} type=\"button\" onClick={onRemove}>\r\n        Delete\r\n      </button>\r\n    </>\r\n  );\r\n};\r\nexport default ContactListItem;\r\n\r\nContactListItem.propTypes = {\r\n  name: PropTypes.string.isRequired,\r\n  number: PropTypes.string.isRequired,\r\n  onRemove: PropTypes.func.isRequired,\r\n};\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport ContactListItem from \"./ContactListItem\";\r\nimport styles from \"../ContactList/Contact.module.css\";\r\n\r\nconst ContactList = ({ contacts, onRemove }) => {\r\n  return (\r\n    <ul className={styles.list}>\r\n      {contacts.map(({ id, name, number }) => (\r\n        <ContactListItem\r\n          key={id}\r\n          name={name}\r\n          number={number}\r\n          onRemove={() => onRemove(id)}\r\n        />\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nContactList.propTypes = {\r\n  contacts: PropTypes.oneOfType([\r\n    PropTypes.arrayOf(\r\n      PropTypes.exact({\r\n        id: PropTypes.string.isRequired,\r\n        name: PropTypes.string.isRequired,\r\n        number: PropTypes.string.isRequired,\r\n      })\r\n    ),\r\n    PropTypes.array,\r\n  ]),\r\n  onRemove: PropTypes.func.isRequired,\r\n};\r\nexport default ContactList;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Filter = ({ onChange }) => {\r\n  return (\r\n    <>\r\n      Find contacts by name:\r\n      <input\r\n        placeholder=\"Search...\"\r\n        type=\"text\"\r\n        name=\"filter\"\r\n        onChange={onChange}\r\n      />\r\n    </>\r\n  );\r\n};\r\nFilter.propTypes = {\r\n  onChange: PropTypes.func.isRequired,\r\n};\r\nexport default Filter;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Section = ({ title, children }) => {\r\n  return (\r\n    <section>\r\n      <h2>{title}</h2>\r\n      {children}\r\n    </section>\r\n  );\r\n};\r\nSection.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  children: PropTypes.node.isRequired,\r\n};\r\n\r\nexport default Section;","import React, { Component } from \"react\";\r\nimport ContactForm from \"./ContactForm/ContactForm\";\r\nimport ContactList from \"./ContactList/ContactList\";\r\nimport Filter from \"./Filter/Filter\";\r\nimport Section from \"./Section/Section\";\r\nimport { addContact, removeContact, getAllContacts } from \"../redux/clientsActions\";\r\nimport { connect } from \"react-redux\";\r\nclass App extends Component {\r\n  state = {\r\n    contacts: [\r\n      { id: \"id-1\", name: \"Rosie Simpson\", number: \"459-12-56\" },\r\n      { id: \"id-2\", name: \"Hermione Kline\", number: \"443-89-12\" },\r\n      { id: \"id-3\", name: \"Eden Clements\", number: \"645-17-79\" },\r\n      { id: \"id-4\", name: \"Annie Copeland\", number: \"227-91-26\" }\r\n    ],\r\n    filter: \"\"\r\n  };\r\n\r\n  handleChange = e => {\r\n    const { name, value } = e.target;\r\n    this.setState({\r\n      [name]: value\r\n    });\r\n    // this.props.getAllContacts(e);\r\n  };\r\n\r\n  removeContact = id => {\r\n    const { contacts } = this.state;\r\n    const updated = contacts.filter(contact => contact.id !== id);\r\n    // this.setState({\r\n    //   contacts: [...updated]\r\n    // });\r\n    this.props.removeContact(id);\r\n  };\r\n\r\n  addContact = contact => {\r\n    const newName = contact.name;\r\n    // const names = this.props.contacts.map(contact => contact.name.toLowerCase());\r\n    const names = this.state.contacts.map(contact => contact.name.toLowerCase());\r\n\r\n    if (names.includes(newName.toLowerCase())) {\r\n      alert(`${newName} is already in contact list`);\r\n    } else {\r\n      // this.setState(state => ({\r\n      //   contacts: [...state.contacts, contact]\r\n      // }));\r\n      this.props.addContact({ ...this.state.contacts, contact });\r\n      //без this не працюэ\r\n    }\r\n  };\r\n\r\n  getVisibleContacts = () => {\r\n    const { contacts, filter } = this.state;\r\n    if (contacts.length) {\r\n      return contacts.filter(contact => contact.name.toLowerCase().includes(filter.toLowerCase()));\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { contacts } = this.state;\r\n    return (\r\n      <>\r\n        <Section title=\"Phonebook\">\r\n          <ContactForm addContact={this.addContact} />\r\n        </Section>\r\n        <Section title=\"Contacts\">\r\n          {contacts.length > 1 && <Filter onChange={this.handleChange} />}\r\n          {contacts.length ? (\r\n            <ContactList contacts={this.getVisibleContacts()} onRemove={this.removeContact} />\r\n          ) : (\r\n            //  <ContactList contacts={this.getVisibleContacts()} onRemove={this.removeContact} />\r\n            <p>There are no contacts here</p>\r\n          )}\r\n        </Section>\r\n      </>\r\n    );\r\n  }\r\n}\r\nconst mSTP = state => ({\r\n  contacts: state.contacts\r\n});\r\n// const mapStateToProps = (state, ownProps) => {\r\n//   return {\r\n//     prop: state.prop\r\n//   };\r\n// };\r\nexport default connect(\r\n  mSTP,\r\n  { addContact, removeContact, getAllContacts }\r\n)(App);\r\n","export const getAllContacts = contacts => {\r\n  return { type: \"getClient\", payload: contacts };\r\n};\r\n\r\nexport const addContact = contact => ({\r\n  type: \"addContact\",\r\n  payload: contact\r\n});\r\n\r\nexport const removeContact = id => ({\r\n  type: \"removeContact\",\r\n  payload: id\r\n});\r\n","const ClientsReducer = (state = [], action) => {\r\n  switch (action.type) {\r\n    case \"addContact\":\r\n      return [...state, action.payload];\r\n    case \"removeContact\":\r\n      return [...state.filter(contact => contact.id !== action.payload)];\r\n    case \"getContacts\":\r\n      return action.payload;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\nexport default ClientsReducer;\r\n","const filterReducer = (state = \"\", action) => {\r\n  switch (action.type) {\r\n    case \"addContact\":\r\n      return [...state, action.payload];\r\n    case \"removeContact\":\r\n      return [...state.filter(contact => contact.id !== action.payload)];\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\nexport default filterReducer;\r\n","import { createStore, combineReducers } from \"redux\";\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\nimport ClientsReducer from \"./clientsReducer\";\r\nimport filterReducer from \"./filterReduser\";\r\n\r\nconst rootReducer = combineReducers({ items: ClientsReducer, filter: filterReducer });\r\n\r\nconst store = createStore(rootReducer, composeWithDevTools());\r\nexport default store;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\nimport store from \"./redux/store\";\nimport { Provider } from \"react-redux\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <BrowserRouter>\n      <React.StrictMode>\n        <App />\n      </React.StrictMode>\n    </BrowserRouter>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}